@{
    ViewData["Title"] = "Home Page";
}

<p>
    Description:<br />
    The POST method sends 2 values (work plan and its status).<br />
    An "item" is created on the server.<br />
    GET method returns all existing "item" values.<br />
    When starting work, one starting "item" is automatically generated (for convenient checking of requests that require the existence of an item).<br />
    The log is also implemented for GET with ID (GetById method), DELETE  (Delete method), PUT and PATCH (Update method).<br />
    All methods are on the same path: (localhost)/api/work<br />
    When a method needs to use a key, it simply needs to be written at the end. For example, an object with the key 90602f50-f8f9-472c-adab-982f7eb2c583 was created at the start.<br />
    Then, in order to remove it, select Postman Delete and call it on the path (localhost)/api/work/90602f50-f8f9-472c-adab-982f7eb2c583<br /><br />

</p>
<div>
    <form method="post" action="~/api/work" enctype="application/x-www-form-urlencoded">
        <table>
            <tr>
                <td><p>Plan :</p></td>
                <td><input type="text" name="plan" /> </td>
            </tr>
            <tr>
                <td><p>Status :</p></td>
                <td><input type="text" name="status" /> </td>
            </tr>
            <tr>
                <td><input type="submit" value="Post (create)" /> </td>
                <td></td>
            </tr>
        </table>
    </form>
</div>
<div>
    <form method="get" action="~/api/work">
        <table>
            <tr>
                <td><input type="submit" value="Get (View all)" /> </td>
                <td></td>
            </tr>
        </table>
    </form>
</div>